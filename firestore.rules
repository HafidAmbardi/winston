rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Base rule - deny all by default
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Public collections
    match /materials/{materialId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
      
      match /chunks/{chunkId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
      }
    }
    
    match /quizzes/{quizId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
      
      match /questions/{questionId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
      }
    }
    
    // User-specific data
    match /users/{userId} {
      // Users can read/write their own data
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // User subcollections
      match /userMaterials/{materialId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /userQuizzes/{quizId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /practiceResults/{resultId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /feedbackReports/{reportId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null; // Allow system to create feedback
        allow update, delete: if request.auth != null && request.auth.uid == userId;
      }
      
      match /recommendations/{recId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null; // Allow system to create recommendations
        allow update, delete: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Helper functions
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }
  }
}